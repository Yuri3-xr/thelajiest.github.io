<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KON_automaton&#39;s House</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-02-19T14:28:54.643Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gym102896F</title>
    <link href="http://yoursite.com/2021/02/19/gym102896F/"/>
    <id>http://yoursite.com/2021/02/19/gym102896F/</id>
    <published>2021-02-19T14:21:51.000Z</published>
    <updated>2021-02-19T14:28:54.643Z</updated>
    
    <content type="html"><![CDATA[<p>题意:给定$a,b,c,n(\leq6e5)$,求$\Pi_{i=0}^{n-1}ai^2+bi+c$的最大平方因子.答案模质数.</p><a id="more"></a><p>首先考虑每一个质数的贡献.<br>$$<br>ans=\Pi p^{\alpha}<br>$$<br>那么对于$\alpha\geq 2$的质数,则会对答案产生贡献$\alpha-\alpha\mod 2$.</p><p>假设可能会产生的贡献的质数”比较少”,那么可以用以下方法得到贡献:</p><p>首先对于一个可能质数$p$,解同余方程$ax^2+bx+c\equiv 0\mod p$.</p><p>(1)在$2a$有逆元的情况下,可以直接带入一元二次方程求根公式算.</p><p>求根可以用Tonelli_Shanks算法(据说常数比较小?).</p><p>解出两个最小解$x_1,x_2$,那么解系是$x_1+kp,x_2+kp$,用试除法暴力判断次数即可.这样就可以计算出每个质数贡献的次数$\alpha$.</p><p>(2)在$2a$没有逆元的情况下</p><p>那也就是说$(2a,p)$不等于1,显然可以直接暴力判断.因为这样的$p$只有$log(2a)$个.</p><p>那么关键问题就在于这个可能产生贡献的质数上. 复杂度取决于这个质数集的大小.</p><p>(1)首先考虑小于TH(一个常数)的质数</p><p>(2)如果TH充分大,让筛去这些质数后,每个数至多两个质因子.显然TH在$(an^2+bn+c)^{\frac{1}{3}}$量级可以做到这件事.</p><p>现在只需要考虑剩下的这些质数的性质了.</p><p>如果一个质数(大于TH)至少出现了两次,那么它们要不然分属至少两个数的质因子,要不然某个数就是完全平方数.</p><p>考虑不同的两个数被$p$整除,那么有$p|(ai^2+bi+c,aj^2+bj+c)$,显然有$p|(ai^2+bi+c,(i-j)(a(i+j)+b))$.</p><p>那么若$p\geq n$,则$p|(a(i+j)+b),\forall i,j\in[0,n)$.显然只需要枚举$(i+j)$的值即可.这里也可以用短除法得到可能的质数p.</p><p>剩下的完全平方数暴力判断即可.</p><p>这样质数集的大小就在$O(max((an^2+bn+c)^{1/3},2n))$内了.</p><p>这样就算解决了这个问题.实现时TH取$2e6$即可.</p><p>BTW,本题需要精巧的实现乘法才能避免爆long long,尤其是Tonelli_Shanks算法中的乘法…</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">        ll f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">char</span> ch = getchar();</span><br><span class="line">        <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'-'</span>)</span><br><span class="line">                f = -f;</span><br><span class="line">            ch = getchar();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            x = x * <span class="number">10</span> + ch - <span class="number">48</span>;</span><br><span class="line">            ch = getchar();</span><br><span class="line">        &#125;</span><br><span class="line">        x = x * f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> ll <span class="title">maxn</span><span class="params">(<span class="number">10000000</span> + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">const</span> ll TH = <span class="number">2e6</span>;</span><br><span class="line">ll p[maxn];</span><br><span class="line"><span class="keyword">int</span> flg[maxn];</span><br><span class="line">ll tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getPrime</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!flg[i])</span><br><span class="line">            p[++tot] = i;</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; j &lt;= tot &amp;&amp; i * p[j] &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flg[i * p[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll x, ll y)</span> </span>&#123; <span class="keyword">return</span> (x + y) &gt;= mod ? x + y - mod : x + y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">mul</span><span class="params">(ll x, ll y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1l</span>l * x * y % mod; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">dec</span><span class="params">(ll x, ll y, ll mod)</span> </span>&#123; <span class="keyword">return</span> ((x - y) % mod + mod) % mod; &#125;</span><br><span class="line">ll a, b, c, n;</span><br><span class="line"><span class="function">ll <span class="title">pow_mod</span><span class="params">(ll a, ll i, ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &amp; <span class="number">1</span>)</span><br><span class="line">            s = s * a % m;</span><br><span class="line">        a = a * a % m;</span><br><span class="line">        i &gt;&gt;= <span class="number">1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Mul</span><span class="params">(ll a, ll b, ll P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll s = a * b - ll((<span class="keyword">long</span> <span class="keyword">double</span>)a * b / P + <span class="number">0.5</span>) * P;</span><br><span class="line">    <span class="keyword">return</span> s &gt;= <span class="number">0</span> ? s : s + P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Pow</span><span class="params">(ll a, ll b, ll P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>, a = Mul(a, a, P))</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            s = Mul(s, a, P);</span><br><span class="line">    <span class="keyword">return</span> s % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Tonelli_Shanks</span><span class="params">(ll n, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> (n &amp; <span class="number">1</span>) ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (Pow(n, p &gt;&gt; <span class="number">1</span>, p) != <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (p &amp; <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> Pow(n, (p + <span class="number">1</span>) &gt;&gt; <span class="number">2</span>, p);</span><br><span class="line">    ll s = __builtin_ctzll(p ^ <span class="number">1</span>);</span><br><span class="line">    ll q = p &gt;&gt; s, z = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (; Pow(z, p &gt;&gt; <span class="number">1</span>, p) == <span class="number">1</span>; ++z)</span><br><span class="line">        ;</span><br><span class="line">    ll c = Pow(z, q, p), r = Pow(n, (q + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>, p), t = Pow(n, q, p), tmp;</span><br><span class="line">    <span class="keyword">for</span> (ll m = s, i; t != <span class="number">1</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>, tmp = t; tmp != <span class="number">1</span>; ++i)</span><br><span class="line">            tmp = Mul(tmp, tmp, p);</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; --m;)</span><br><span class="line">            c = Mul(c, c, p);</span><br><span class="line">        r = Mul(r, c, p);</span><br><span class="line">        c = Mul(c, c, p);</span><br><span class="line">        t = Mul(t, c, p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; need;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; need2;</span><br><span class="line">ll used_x[maxn];</span><br><span class="line">ll Push[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(a), read(b), read(c), read(n);</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    getPrime(TH);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= tot; i++)</span><br><span class="line">        need.push_back(p[i]);</span><br><span class="line">    ll t1 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n; i++)</span><br><span class="line">        used_x[i] = a * i + b;</span><br><span class="line">    <span class="keyword">while</span> (p[t1] &lt;= (ll)<span class="built_in">sqrt</span>(a * n + b) + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        ll pop = p[t1];</span><br><span class="line">        <span class="keyword">if</span> ((a % pop) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (ll j = <span class="number">0</span>; j &lt; <span class="number">2</span> * n; j++)</span><br><span class="line">                <span class="keyword">while</span> ((used_x[j] % pop) == <span class="number">0</span>)</span><br><span class="line">                    used_x[j] /= pop;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (ll j = (pop - b % pop) * Pow(a % pop, pop - <span class="number">2</span>, pop) % pop; j &lt; n * <span class="number">2</span>; j += pop)</span><br><span class="line">                <span class="keyword">while</span> ((used_x[j] % pop) == <span class="number">0</span>)</span><br><span class="line">                    used_x[j] /= pop;</span><br><span class="line">        &#125;</span><br><span class="line">        t1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n; i++)</span><br><span class="line">        <span class="keyword">if</span> (used_x[i] &gt; <span class="number">1</span>)</span><br><span class="line">            need.push_back(used_x[i]);</span><br><span class="line">    sort(need.begin(), need.end());</span><br><span class="line">    unique(need.begin(), need.end());</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Push[i] = a * i * i + b * i + c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> p : need)</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = b * b - <span class="number">4</span> * a * c;</span><br><span class="line">        res = (res % p + p) % p;</span><br><span class="line">        ll dp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!((a * <span class="number">2</span>) % p))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (ll j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line">                <span class="keyword">while</span> (!(Push[j] % p))</span><br><span class="line">                &#123;</span><br><span class="line">                    Push[j] /= p;</span><br><span class="line">                    ++dp;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ll res2 = Tonelli_Shanks(res, p);</span><br><span class="line">            <span class="keyword">if</span> (res2 == <span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            ll x1 = Mul(dec(res2, b, p), Pow(<span class="number">2</span> * a % p, p - <span class="number">2</span>, p), p);</span><br><span class="line">            ll x2 = Mul(dec((-res2 % p + p) % p, b, p), Pow(<span class="number">2</span> * a % p, p - <span class="number">2</span>, p), p);</span><br><span class="line">            <span class="keyword">while</span> (x1 &lt; n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (Push[x1] % p == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    dp++;</span><br><span class="line">                    Push[x1] /= p;</span><br><span class="line">                &#125;</span><br><span class="line">                x1 += p;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (x2 &lt; n)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (Push[x2] % p == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    dp++;</span><br><span class="line">                    Push[x2] /= p;</span><br><span class="line">                &#125;</span><br><span class="line">                x2 += p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = Mul(ans, Pow(p % mod, dp - dp % <span class="number">2</span>, mod), mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (ll k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll t2 = <span class="built_in">sqrt</span>(Push[k]);</span><br><span class="line">        <span class="keyword">if</span> (t2 * t2 == Push[k])</span><br><span class="line">            ans = Mul(Push[k], ans, mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题意:给定$a,b,c,n(\leq6e5)$,求$\Pi_{i=0}^{n-1}ai^2+bi+c$的最大平方因子.答案模质数.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>PE746</title>
    <link href="http://yoursite.com/2021/02/10/PE746/"/>
    <id>http://yoursite.com/2021/02/10/PE746/</id>
    <published>2021-02-10T15:55:32.000Z</published>
    <updated>2021-02-11T05:29:08.322Z</updated>
    
    <content type="html"><![CDATA[<p>是个夫妻选座问题的升级版,感觉如果很会二项式反演的话确实也没什么意思.</p><a id="more"></a><p>首先按照二项式反演的套路,”恰好”不容易计算就计算”至少”的.<br>设$f(k)$表示恰好$k$组家庭坐在一起,$g(k)$表示钦定$k$组家庭坐在一起,其他随意.<br>显然,我们有以下式子:<br>$$<br>g(i)=\sum_{k=i}^n C_{k}^{i}f(k)<br>$$<br>使用二项式反演:<br>$$<br>f(i)=\sum_{k=i}^n (-1)^{k-i}C_{k}^{i}g(k)<br>$$<br>因此我们只要知道$g$,就知道$f$了.<br>显然:<br>$$<br>g(k)=2C_n^{k} W_{4n,k}k!4^k[(2n-2k)!]^2<br>$$<br>其中$W_{4n,k}$表示在有$4n$个顶点的圆上的用长度为$4$的无标号多米诺骨牌不重叠覆盖的方案数.</p><p>这个方案数可以用插板法或者不定方程模型分类得到:<br>$$<br>W_{4n,k}=C_{4n-3k}^k+3*C_{4n-3k-1}^{k-1}<br>$$<br>至此,这个题就被写出来了.</p><p>小彩蛋:在某个讲义的夫妻问题配对的Conclusion中记载了以下一段话…</p><p>It appears that it was only the tradition of seating the ladies first that made the ménage problem seem in any way difficult. We may speculate that, were it not for this tradition, it would not have taken half a century to discover Touchard’s formula for $M_n$ . Of all the ways in which sexism has held back the advance of mathematics, this may well be the most peculiar.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line">ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000010</span>;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a, ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &amp; <span class="number">1</span>)</span><br><span class="line">            ret = ret * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">        x &gt;&gt;= <span class="number">1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">ll fac[maxn], inv[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    inv[maxn - <span class="number">1</span>] = qpow(fac[maxn - <span class="number">1</span>], mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = maxn - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        inv[i] = inv[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll n, ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; m)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fac[n] * inv[m] % mod * inv[n - m] % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll x, ll y)</span> </span>&#123; <span class="keyword">return</span> (x % mod + y % mod) % mod; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">dec</span><span class="params">(ll x, ll y)</span> </span>&#123; <span class="keyword">return</span> ((x % mod - y % mod) + <span class="number">2</span> * mod) % mod; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">mul</span><span class="params">(ll x, ll y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1l</span>l * x * y % mod; &#125;</span><br><span class="line"><span class="function">ll <span class="title">M</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll k = <span class="number">0</span>; k &lt;= n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = mul(<span class="number">2</span>, C(n, k));</span><br><span class="line">        res = mul(res, add(C(<span class="number">4</span> * n - <span class="number">3</span> * k, k), <span class="number">3</span> * C(<span class="number">4</span> * n - <span class="number">3</span> * k - <span class="number">1</span>, k - <span class="number">1</span>)));</span><br><span class="line">        res = mul(res, fac[k]);</span><br><span class="line">        res = mul(res, qpow(<span class="number">4</span>, k));</span><br><span class="line">        res = mul(res, mul(fac[<span class="number">2</span> * n - <span class="number">2</span> * k], fac[<span class="number">2</span> * n - <span class="number">2</span> * k]));</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            ans = add(ans, res);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans = dec(ans, res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    ll N;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    ll Ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Ans = add(Ans, M(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; Ans &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是个夫妻选座问题的升级版,感觉如果很会二项式反演的话确实也没什么意思.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="PE" scheme="http://yoursite.com/tags/PE/"/>
    
  </entry>
  
  <entry>
    <title>数论分块(伪)</title>
    <link href="http://yoursite.com/2021/02/07/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97-%E4%BC%AA/"/>
    <id>http://yoursite.com/2021/02/07/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97-%E4%BC%AA/</id>
    <published>2021-02-07T13:12:18.000Z</published>
    <updated>2021-02-07T13:27:49.527Z</updated>
    
    <content type="html"><![CDATA[<p>本文大概写了一种广为人知的数论分块技巧.是在水PE的时候搬过来的,复杂度的证明可以去翻论文.</p><a id="more"></a><p>很久以前做了个题,大概就是要算<br>$$<br>\sum_{i=1}^{n}\mu^2(x)<br>$$<br>众所周知:<br>$$<br>\sum_{i=1}^{n}\mu^2(x)=\sum_{i=1}^{\sqrt{n}}\mu(x)\frac{n}{i^2}<br>$$<br>然后就有了一个优秀的$O(n^\frac{1}{2})$的算法.</p><p>但是呢后来碰到了一个要$n=10^{18}$这个量级的计算的题,这个方法就萎了.</p><p>尝试数论分块发现一点用都没有…</p><p>不过呢,还是有一种方法可以算的.</p><p>一个简单结论:<br>$$<br>\forall i\in(\frac{n}{d+1},\frac{n}{d}],\frac{n}{i}=d<br>$$<br>取一个$i’^2=i$好像很优秀的样子.但是用这个结论去搞复杂度好像没什么变化…(尝试枚举d然后计算)</p><p>因此要对于计算区间分块.一部分暴力,一部分用这个结论算.</p><p>用这个结论算的时候要计算莫比乌斯函数的前缀和,因此需要杜教筛来优化复杂度…</p><p>这个时候调整一下两个复杂度的平衡,得到枚举$d\dot{=}n^{0.2}$时大概复杂度比较优秀,应该是$O(n^{\frac{2}{5}})$</p><p>这里的复杂度证明有点困难,丢论文<a href="https://arxiv.org/pdf/1107.4890.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1107.4890.pdf</a>…</p><p>代码常数有点萎…</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;ll, ll&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">maxn</span><span class="params">(<span class="number">34000000</span> + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn], mu[maxn], flg[maxn];</span><br><span class="line">ll Sum_mu[maxn];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line">ll N;</span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">TH</span><span class="params">(<span class="number">10000000</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!flg[i])</span><br><span class="line">            p[++tot] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= tot &amp;&amp; i * p[j] &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flg[i * p[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                mu[i * p[j]] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mu[i * p[j]] = -mu[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Sum_mu[i] = Sum_mu[i - <span class="number">1</span>] + mu[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Sum_Mu</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= TH)</span><br><span class="line">        <span class="keyword">return</span> Sum_mu[x];</span><br><span class="line">    <span class="keyword">if</span> (mp[x])</span><br><span class="line">        <span class="keyword">return</span> mp[x];</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll l = <span class="number">2</span>, r; l &lt;= x; l = r + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r = x / (x / l);</span><br><span class="line">        res = res - (r - l + <span class="number">1</span>) * Sum_Mu(x / l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mp[x] = res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">D</span><span class="params">(ll x)</span> </span>&#123; <span class="keyword">return</span> (ll)(<span class="built_in">sqrt</span>((<span class="keyword">double</span>)(N) / (<span class="keyword">double</span>)(x))); &#125;</span><br><span class="line"><span class="function">ll <span class="title">brute_force</span><span class="params">(ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">register</span> ll i = <span class="number">1</span>; i &lt;= D(k + <span class="number">1</span>); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res += mu[i] * (N / (i * i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">nb_gao</span><span class="params">(ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">register</span> ll i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res += i * (Sum_Mu(D(i)) - Sum_Mu(D(i + <span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    N = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">clock_t</span> t1, t2;</span><br><span class="line">    t1 = clock();</span><br><span class="line">    ll k = <span class="built_in">pow</span>(N, <span class="number">0.2</span>);</span><br><span class="line">    getMu(<span class="number">2</span> * TH + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; brute_force(k) + nb_gao(k) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    t2 = clock();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"time = "</span> &lt;&lt; ((<span class="keyword">float</span>)t2 - (<span class="keyword">float</span>)t1) / CLOCKS_PER_SEC &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概很多有$\sum_{i=1}^{\sqrt n}g(x)f(\frac{n}{i^2})$的形式的题都可以这么算吧…</p><p>(至少PE上我就见过$gcd(d,n/d)$的前缀和可以这么算).新题大概也是这个的推广.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文大概写了一种广为人知的数论分块技巧.是在水PE的时候搬过来的,复杂度的证明可以去翻论文.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>PE 454</title>
    <link href="http://yoursite.com/2020/12/28/PE-454/"/>
    <id>http://yoursite.com/2020/12/28/PE-454/</id>
    <published>2020-12-28T07:51:10.000Z</published>
    <updated>2020-12-28T07:56:44.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PE-454"><a href="#PE-454" class="headerlink" title="PE 454"></a>PE 454</h3><p>题意:求满足$x&lt;y\leq L$及下述等式的二元组$(x,y)$的个数.<br>$$<br>\frac{1}{x}+\frac{1}{y}=\frac{1}{n}<br>$$<br>其中$n$任取.</p><a id="more"></a><p>设$g=\gcd(x,y)$,$x=ag,y=bg$,显然有$(a,b)=1$.</p><p>则原约束变为:<br>$$<br>\frac{a+b}{ab}=\frac{g}{n}<br>$$<br>初等数论告诉我们这里有:$gcd(a+b,ab)=1$,故$g,n$互素.</p><p>故设$g=t(a+b),n=tab$,则我们要求的就是满足下列约束的二元组$(a,b)$的个数:<br>$$<br>t(a+b)a\leq L,a&lt;b,gcd(a,b)=1<br>$$<br>尝试枚举$a,b$:<br>$$<br>ans=\sum_{a=1}^{\sqrt{L}}\sum_{b=a+1}^{\sqrt{L}}\frac{L}{a(a+b)}[(a,b)==1]=\sum_{b=1}^{\sqrt{L}}\sum_{a=b+1}^{2b-1}\frac{L}{ab}[(a,b)==1]<br>$$<br>然后就是套路地莫比乌斯反演就行了.<br>$$<br>ans=\sum_{b=1}^{\sqrt{L}}\sum_{a=b+1}^{2b-1}\frac{L}{ab}\sum_{d|(a,b)}\mu(d)=\sum_{d=1}^{\sqrt{L}}\mu(d)\sum_{b=1}^{\sqrt{L}}\sum_{a=b+1}^{2b-1}\frac{L}{ab}[d|a][d|b]=\sum_{d=1}^{\sqrt{L}}\mu(d)\sum_{b=1}^{\sqrt{L/d^2}}\sum_{a=b+1}^{2b-1}\frac{L}{abd^2}<br>$$<br>然后就做完了.</p><p>直接整除分块复杂度大概是$O(很快)$的样子(并没有认真算过复杂度)</p><p>为什么要写题解呢,大概是个套路吧,PE 735也是一个道理的样子.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">namespace</span> IO</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>) f=-f;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">x=x*f;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">sum</span><span class="params">(ll t,ll Begin,ll End)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll l=Begin,r;l&lt;=End;l=r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll val=t/l;</span><br><span class="line"><span class="keyword">if</span>(val) r=min(t/val,End);</span><br><span class="line"><span class="keyword">else</span> r=End;</span><br><span class="line">sum+=(r-l+<span class="number">1</span>)*(t/l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">maxn</span> <span class="params">(<span class="number">10000000</span>+<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn],mu[maxn],flg[maxn];<span class="keyword">int</span> tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!flg[i])  p[++tot] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= tot &amp;&amp; i*p[j] &lt;= n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flg[i*p[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % p[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                mu[i*p[j]] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mu[i*p[j]] = -mu[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll L;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;L;</span><br><span class="line">getMu(<span class="built_in">sqrt</span>(L)+<span class="number">10</span>);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;<span class="number">1l</span>l*i*i&lt;=L;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line">ll bound=L/i/i;</span><br><span class="line"><span class="keyword">for</span>(ll j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=bound;j++)</span><br><span class="line">&#123;</span><br><span class="line">res+=sum(bound/j,j+<span class="number">1</span>,<span class="number">2</span>*j<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">ans+=mu[i]*res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>附上一个PE 735的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">namespace</span> IO</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>) f=-f;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">x=x*f;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span> <span class="title">maxn</span> <span class="params">(<span class="number">10000000</span>+<span class="number">100</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn],mu[maxn],flg[maxn];<span class="keyword">int</span> tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!flg[i])  p[++tot] = i, mu[i] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= tot &amp;&amp; i*p[j] &lt;= n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flg[i*p[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % p[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                mu[i*p[j]] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mu[i*p[j]] = -mu[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">f1</span><span class="params">(ll Begin,ll End,ll t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll l=Begin,r;l&lt;=End;l=r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll val=t/l;</span><br><span class="line"><span class="keyword">if</span>(val) r=min(t/val,End);</span><br><span class="line"><span class="keyword">else</span> r=End;</span><br><span class="line">sum+=(r-l+<span class="number">1</span>)*(t/l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">f2</span><span class="params">(ll Begin,ll End,ll t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll l=Begin,r;l&lt;=End;l=r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll val=t/l;</span><br><span class="line"><span class="keyword">if</span>(val) r=min(t/val,End);</span><br><span class="line"><span class="keyword">else</span> r=End;</span><br><span class="line"><span class="keyword">if</span>((r-l+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">sum+=(r-l+<span class="number">1</span>)*(t/l)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(l%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">sum+=(r-l+<span class="number">2</span>)*(t/l)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">sum+=(r-l)*(t/l)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll L;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;L;</span><br><span class="line">getMu(<span class="number">1000000</span>);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i*i&lt;=L;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line">ll bound=L/i/i;</span><br><span class="line"><span class="keyword">for</span>(ll j=<span class="number">1</span>;j*j&lt;=bound;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">res+=f2(<span class="number">2</span>*j+<span class="number">1</span>,<span class="number">2</span>*j+L/(j*i),bound/j);</span><br><span class="line">&#125;</span><br><span class="line">ans+=mu[i]*res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;<span class="number">1l</span>l*i*i&lt;=L;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll res=<span class="number">0</span>;</span><br><span class="line">ll bound=L/i/i;</span><br><span class="line"><span class="keyword">for</span>(ll j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=bound;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j*i%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">res+=f1(j+<span class="number">1</span>,j+L/(j*i),bound/j);</span><br><span class="line">&#125;</span><br><span class="line">ans+=mu[i]*res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans+L&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PE-454&quot;&gt;&lt;a href=&quot;#PE-454&quot; class=&quot;headerlink&quot; title=&quot;PE 454&quot;&gt;&lt;/a&gt;PE 454&lt;/h3&gt;&lt;p&gt;题意:求满足$x&amp;lt;y\leq L$及下述等式的二元组$(x,y)$的个数.&lt;br&gt;$$&lt;br&gt;\frac{1}{x}+\frac{1}{y}=\frac{1}{n}&lt;br&gt;$$&lt;br&gt;其中$n$任取.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="PE" scheme="http://yoursite.com/tags/PE/"/>
    
  </entry>
  
  <entry>
    <title>SYMBOLIC METHODS</title>
    <link href="http://yoursite.com/2020/08/13/SYMBOLIC-METHODS/"/>
    <id>http://yoursite.com/2020/08/13/SYMBOLIC-METHODS/</id>
    <published>2020-08-13T14:53:04.000Z</published>
    <updated>2020-08-17T11:26:16.733Z</updated>
    
    <content type="html"><![CDATA[<p>The blog is about the ordinary generating function(OGF), and it is updating.</p><a id="more"></a><p>The ordinary generating function of a sequence ($A_n$) is the formal power series:<br>$$<br>A(z)=\sum_{n=0}^{\infty}A_nz^n<br>$$<br>The ordinary generating function of a combinatorial class $\cal{A}$ is the generating function of numbers $A_n=\rm{card}(\cal{A_n})$.Equivalently, the OGF can also be like:<br>$$<br>A(z)=\sum_{\alpha\in\cal{A}}z^{|(\alpha)|}<br>$$<br>Here is some useful formulas:</p><p>1.1 Sum<br>$$<br>\cal{A}=\cal{B}+\cal{C}\Longrightarrow \it{A}(z)=B(z)+C(z)\<br>$$</p><p><strong>Proof.</strong>  It follows directly from the combinatorial form of OGF:</p><p>$A(z)=\sum_{\alpha\in\cal{A}}z^{|(\alpha)|}=\sum_{\alpha\in\cal{B}}z^{|(\alpha)|}+\sum_{\alpha\in\cal{C}}z^{|(\alpha)|}=B(z)+C(z)$</p><p>1.2 Cartesian product<br>$$<br>\cal{A}=\cal{B}\times\cal{C}\Longrightarrow \it{A}(z)=B(z)C(z)\<br>$$<br><strong>Proof.</strong><br>$$<br>A(z)=\sum_{\alpha\in \cal{A}}z^{|\alpha|}=\sum_{(\beta,\gamma)\in(\cal{B}\times\cal{C})}z^{|\beta|+|\gamma|}=(\sum_{\beta\in\cal{B}}z^{|\beta|})(\sum_{\gamma\in\cal{C}}z^{|\gamma|})=B(z)C(z)<br>$$<br>By considering all possibilities, it is related by the convolution relation:<br>$$<br>A_n=\sum_{k=0}^{n}B_kC_{n-k}<br>$$<br>1.3 Sequence</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The blog is about the ordinary generating function(OGF), and it is updating.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="notes" scheme="http://yoursite.com/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Day4G ZJY心想绝对不能放你一马题解</title>
    <link href="http://yoursite.com/2020/08/07/Day4G-ZJY%E5%BF%83%E6%83%B3%E7%BB%9D%E5%AF%B9%E4%B8%8D%E8%83%BD%E6%94%BE%E4%BD%A0%E4%B8%80%E9%A9%AC%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/08/07/Day4G-ZJY%E5%BF%83%E6%83%B3%E7%BB%9D%E5%AF%B9%E4%B8%8D%E8%83%BD%E6%94%BE%E4%BD%A0%E4%B8%80%E9%A9%AC%E9%A2%98%E8%A7%A3/</id>
    <published>2020-08-07T13:54:25.000Z</published>
    <updated>2020-08-07T13:58:59.180Z</updated>
    
    <content type="html"><![CDATA[<p>题意:给定一个序列${a_i}$,在$K_{a_i}~1\leq i\leq n$任取一个点,将这n个点依次连接形成一个环,求问有多少种方式删边使得这张图不存在环.</p><p>数据范围:$1\leq n\leq 2e5$</p><a id="more"></a><p>题解:</p><p>首先,$K_n$的生成树个数是$n^{n-2}$,证明可以用矩阵树定理,或者考虑组合意义.</p><p>设F(x)是生成树个数函数的$EGF$,即$F(x)=\sum_{i=0}^{\infty}\frac{i^{i-2}}{i!}x^i$</p><p>考虑生成函数的乘法的意义,即$[x^nn!]F(x)^2$表示的其实是由两棵生成树序列构成的森林的种数.考虑到森林之间不带标号,于是真实种数是$[x^nn!]\frac{F(x)^2}{2!}$.设$G(x)$是生成森林的$EGF$,则:$G(x)=\sum_{i=0}^{\infty}\frac{F(x)^i}{i!}=e^{F(x)}$.        </p><p>如果不考虑大环的情况,那么$ans=2^n\Pi_{i=1}^n[x^{a_i}a_i!]G(x)$</p><p>但是其实是有大环的情况的.考虑$t_n$表示n个点,其中1,n两个点不连通的情况.</p><p>有:$t_n=\sum_{i=0}^{n-2}f_{i+1}g_{n-i-1}C_{n-2}^{i}$,设${t_n}$的EGF是$T(x)$,有$T(x)=\int\int F(x)^{‘}G(x)^{‘}$</p><p>故答案即为$ans=2^n\Pi_{i=1}^n[x^{a_i}a_i!]G(x)-\Pi_{i=1}^{n}([x^{a_i}a_i!]G(x)-[x^{a_i}a_i!]T(x))$</p><p>使用多项式技术即可做到$O(nlogn)$,如果不使用EGF,也可以用二项卷积式得到一个$O(nlog^2n)$的分治NTT做法.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> cs const</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">x=x*f;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"></span><br><span class="line">cs <span class="keyword">int</span> mod=<span class="number">998244353</span>,N=<span class="number">810000</span>,inv2=mod+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a+b&gt;=mod?a+b-mod:a+b;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a&lt;b?a-b+mod:a-b;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (ll)a*b%mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">quickpow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> res=<span class="number">1</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=mul(res,a);</span><br><span class="line">a=mul(a,a);</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Poly;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(cs Poly &amp;a,<span class="keyword">char</span> c=<span class="string">' '</span>,ostream &amp;out=<span class="built_in">cout</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;a.size();++i)out&lt;&lt;a[i]&lt;&lt;c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> r[N],inv[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">NTT</span><span class="params">(Poly &amp;A,<span class="keyword">int</span> len,<span class="keyword">int</span> typ)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;len;++i)<span class="keyword">if</span>(i&lt;r[i])swap(A[i],A[r[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">1</span>;i&lt;len;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> wn=quickpow(typ==<span class="number">-1</span>?(mod+<span class="number">1</span>)/<span class="number">3</span>:<span class="number">3</span>,(mod<span class="number">-1</span>)/i/<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re j=<span class="number">0</span>;j&lt;len;j+=i&lt;&lt;<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re k=<span class="number">0</span>,x,y,w=<span class="number">1</span>;k&lt;i;++k,w=mul(w,wn))&#123;</span><br><span class="line">x=A[j+k],y=mul(w,A[j+k+i]);</span><br><span class="line">A[j+k]=add(x,y);</span><br><span class="line">A[j+k+i]=dec(x,y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(typ==<span class="number">-1</span>)<span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;len;++i)A[i]=mul(A[i],inv[len]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init_rev</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;len;++i)r[i]=r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>|((i&amp;<span class="number">1</span>)*(len&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>+(cs Poly &amp;a,cs Poly &amp;b)&#123;</span><br><span class="line">Poly c=a;c.resize(max(a.size(),b.size()));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;b.size();++i)c[i]=add(c[i],b[i]);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>-(cs Poly &amp;a,cs Poly &amp;b)&#123;</span><br><span class="line">Poly c=a;c.resize(max(a.size(),b.size()));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;b.size();++i)c[i]=dec(c[i],b[i]);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>*(Poly a,Poly b)&#123;</span><br><span class="line"><span class="keyword">int</span> n=a.size(),m=b.size(),l=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;n+m<span class="number">-1</span>)l&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">init_rev(l);</span><br><span class="line">a.resize(l),NTT(a,l,<span class="number">1</span>);</span><br><span class="line">b.resize(l),NTT(b,l,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;l;++i)a[i]=mul(a[i],b[i]);</span><br><span class="line">NTT(a,l,<span class="number">-1</span>);</span><br><span class="line">a.resize(n+m<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>*(Poly a,<span class="keyword">int</span> b)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;a.size();++i)a[i]=mul(a[i],b);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Deriv</span><span class="params">(Poly a)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i+<span class="number">1</span>&lt;a.size();++i)a[i]=mul(a[i+<span class="number">1</span>],i+<span class="number">1</span>);</span><br><span class="line">a.pop_back();</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Integ</span><span class="params">(Poly a)</span></span>&#123;</span><br><span class="line">a.push_back(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=a.size()<span class="number">-1</span>;i;--i)a[i]=mul(a[i<span class="number">-1</span>],inv[i]);</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Inv</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">Poly c,b(<span class="number">1</span>,quickpow(a[<span class="number">0</span>],mod<span class="number">-2</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re l=<span class="number">4</span>;(l&gt;&gt;<span class="number">2</span>)&lt;lim;l&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">init_rev(l);</span><br><span class="line">c=a,c.resize(l&gt;&gt;<span class="number">1</span>);</span><br><span class="line">c.resize(l),NTT(c,l,<span class="number">1</span>);</span><br><span class="line">b.resize(l),NTT(b,l,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">0</span>;i&lt;l;++i)b[i]=mul(b[i],dec(<span class="number">2</span>,mul(c[i],b[i])));</span><br><span class="line">NTT(b,l,<span class="number">-1</span>);</span><br><span class="line">b.resize(l&gt;&gt;<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">b.resize(lim);</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Inv</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Inv(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Ln</span><span class="params">(Poly a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">a=Integ(Deriv(a)*Inv(a,lim));</span><br><span class="line">a.resize(lim);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Ln</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Ln(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Exp</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">Poly c,b(<span class="number">1</span>,<span class="number">1</span>);<span class="keyword">int</span> n=a.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re i=<span class="number">2</span>;(i&gt;&gt;<span class="number">1</span>)&lt;lim;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">c=Ln(b,i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re j=<span class="number">0</span>;j&lt;i;++j)c[j]=dec(j&lt;n?a[j]:<span class="number">0</span>,c[j]);</span><br><span class="line">c[<span class="number">0</span>]=add(c[<span class="number">0</span>],<span class="number">1</span>);</span><br><span class="line">b=b*c;</span><br><span class="line">b.resize(i);</span><br><span class="line">&#125;</span><br><span class="line">b.resize(lim);</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Exp</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Exp(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line">cs <span class="keyword">int</span> w4=quickpow(<span class="number">3</span>,(mod<span class="number">-1</span>)/<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Cos</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">Poly c=a;c.resize(lim);</span><br><span class="line">c=(Exp(c*w4)+Exp(c*(mod-w4)))*inv2;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Cos</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Cos(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Sin</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">Poly c=a;c.resize(lim);</span><br><span class="line">c=(Exp(c*w4)-Exp(c*(mod-w4)))*mul(inv2,quickpow(w4,mod<span class="number">-2</span>));</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Sin</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Sin(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Sqrt</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">Poly c,d,b(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re l=<span class="number">4</span>;(l&gt;&gt;<span class="number">2</span>)&lt;lim;l&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">init_rev(l);</span><br><span class="line">c=a,c.resize(l&gt;&gt;<span class="number">1</span>);</span><br><span class="line">d=Inv(b,l&gt;&gt;<span class="number">1</span>);</span><br><span class="line">c.resize(l),NTT(c,l,<span class="number">1</span>);</span><br><span class="line">d.resize(l),NTT(d,l,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re j=<span class="number">0</span>;j&lt;l;++j)c[j]=mul(c[j],d[j]);</span><br><span class="line">NTT(c,l,<span class="number">-1</span>);</span><br><span class="line">b.resize(l&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> re j=<span class="number">0</span>;j&lt;(l&gt;&gt;<span class="number">1</span>);++j)b[j]=mul(add(c[j],b[j]),inv2);</span><br><span class="line">&#125;</span><br><span class="line">b.resize(lim);</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Sqrt</span><span class="params">(cs Poly &amp;a)</span></span>&#123;<span class="keyword">return</span> Sqrt(a,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Ksm</span><span class="params">(Poly a,<span class="keyword">int</span> k,<span class="keyword">int</span> lim)</span></span>&#123;</span><br><span class="line">a=Exp(Ln(a)*k);</span><br><span class="line">a.resize(lim);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Poly <span class="title">Ksm</span><span class="params">(cs Poly &amp;a,<span class="keyword">int</span> k)</span></span>&#123;<span class="keyword">return</span> Ksm(a,k,a.size());&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>/(Poly a,Poly b)&#123;</span><br><span class="line"><span class="keyword">int</span> re len=<span class="number">1</span>,deg=a.size()-b.size()+<span class="number">1</span>;</span><br><span class="line">reverse(a.begin(),a.end());</span><br><span class="line">reverse(b.begin(),b.end());</span><br><span class="line"><span class="keyword">while</span>(len&lt;=deg)len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">b=Inv(b,len);b.resize(deg);</span><br><span class="line">a=a*b;a.resize(deg);</span><br><span class="line">reverse(a.begin(),a.end());</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> Poly <span class="keyword">operator</span>%(cs Poly &amp;a,cs Poly &amp;b)&#123;</span><br><span class="line">Poly c=a-(a/b)*b;</span><br><span class="line">c.resize(b.size()<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> frac[N+<span class="number">10</span>],invf[N+<span class="number">10</span>];</span><br><span class="line">Poly dp1,dp2,dp3;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init_inv</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">inv[<span class="number">0</span>]=inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;++i)inv[i]=mul(inv[mod%i],mod-mod/i);</span><br><span class="line">frac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">frac[i]=mul(frac[i<span class="number">-1</span>],i);</span><br><span class="line">invf[N<span class="number">-1</span>]=quickpow(frac[N<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">invf[i]=mul(invf[i+<span class="number">1</span>],(i+<span class="number">1</span>));</span><br><span class="line">dp1.push_back(<span class="number">0</span>),dp1.push_back(<span class="number">1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">dp1=i^(i-2)/frac(i)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">dp1.push_back(mul(quickpow(i,i<span class="number">-2</span>),invf[i]));</span><br><span class="line">dp2=Exp(dp1);</span><br><span class="line"><span class="comment">// for(int i=0;i&lt;=10;i++)</span></span><br><span class="line"><span class="comment">// cout&lt;&lt;dp2[i]&lt;&lt;" ";</span></span><br><span class="line">dp3=Integ(Integ(Deriv(dp1)*Deriv(dp2)));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">dp1[i]=mul(dp1[i],frac[i]);</span><br><span class="line">dp2[i]=mul(dp2[i],frac[i]);</span><br><span class="line">dp3[i]=mul(dp3[i],frac[i]);&#125;</span><br><span class="line">&#125;</span><br><span class="line">Poly A;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; k;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init_inv(<span class="number">200000</span>+<span class="number">1</span>);</span><br><span class="line">read(n);</span><br><span class="line">k.reserve(n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">read(k[i]);</span><br><span class="line">ans=<span class="number">1l</span>l*quickpow(<span class="number">2</span>,n);</span><br><span class="line">ll ans2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans2=mul(ans2,dp2[k[i]]);</span><br><span class="line">&#125;</span><br><span class="line">ll ans3=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans3=mul(ans3,dec(dp2[k[i]],dp3[k[i]]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dec(mul(ans,ans2),ans3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题意:给定一个序列${a_i}$,在$K_{a_i}~1\leq i\leq n$任取一个点,将这n个点依次连接形成一个环,求问有多少种方式删边使得这张图不存在环.&lt;/p&gt;
&lt;p&gt;数据范围:$1\leq n\leq 2e5$&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>周记 4-28</title>
    <link href="http://yoursite.com/2020/04/28/%E5%91%A8%E8%AE%B0-4-28/"/>
    <id>http://yoursite.com/2020/04/28/%E5%91%A8%E8%AE%B0-4-28/</id>
    <published>2020-04-28T02:41:00.000Z</published>
    <updated>2020-04-28T02:42:04.571Z</updated>
    
    <content type="html"><![CDATA[<p>阁下是，人类？ —东方妖妖梦</p><a id="more"></a><p>又是一事无成的一周.想着不能放松刷题,又因为各种懈怠,到头来也没刷几道.</p><p>这周干了些什么呢?</p><p>(1).完成了用flask做后端的网站,并且上线到了某个土豆服务器;</p><p>(2).写了两场AGC;</p><p>(3).打了一次XJTUOJ的比赛,发现自己写$dp$还是不够细心,所以被降秩打击了.</p><p>(4).复习了工科数学分析(最近工数学的难度还是有点大的);</p><p>(5).因为某个题重新学了点分治,发现寒假写的一个spoj的点分治题的bug(数据水当时居然过掉了???).</p><p>综上,这周效率低下,尤其是完成网页搭建的时候真的是像无头苍蝇,搞得自己非常疲惫,想学点前端知识老师又不讲,实现起来”浪费了”许多时间(也许老师的初衷是好的,但是这个作业真的离谱,就是搭建好了又学到了什么呢,还不如等把数据库,前端等专业课上完再学).</p><p>听说要开学了,下周也是五一,所以初步给个下周的plan吧:</p><p>(1).把AGC题解补了;</p><p>(2).打AGC;</p><p>(3).复习口语考试;</p><p>(4).五一出行计划(可能并无);</p><p>(5).数据结构大作业;</p><p>(6).党课;</p><p>五月份可能很多时间都要奉献给文化课了,趁着四月的尾巴,希望自己能开心的度过.有些舍不得家里的环境啊,到学校之前一定要记得买teapigs的红茶,自热火锅可能也是需要的吧,这几天就下单吧…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阁下是，人类？ —东方妖妖梦&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="周记" scheme="http://yoursite.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>XJTUOJ 校赛模拟赛G</title>
    <link href="http://yoursite.com/2020/04/26/XJTUOJ-%E6%A0%A1%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9BG/"/>
    <id>http://yoursite.com/2020/04/26/XJTUOJ-%E6%A0%A1%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9BG/</id>
    <published>2020-04-26T08:15:36.000Z</published>
    <updated>2020-04-26T08:17:06.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XJTUOJ-校赛模拟赛G"><a href="#XJTUOJ-校赛模拟赛G" class="headerlink" title="XJTUOJ  校赛模拟赛G"></a>XJTUOJ  校赛模拟赛G</h2><p>校赛模拟赛这个G其实场上有这个思路,但是这道题的$dp$转移还是很容易写错的.尤其是初值的问题,要考虑清楚$dp$的意义,以下的题解中的$dp$方式有点奇怪,可能并非最简单的$dp$方式,不过也足以通过这道题.</p><a id="more"></a><p>考虑如何计算奇数偶数路径数,其实就是黑白染色,记黑色的点$x$个,白色的点$y$个,我们要最大化的<br>就是$\sum ((x-y)^2-(x+y))$,其实就是要最大化前面那个东西.</p><p>考虑一个$dp$,$dp[u][p]$表示考虑现在与u联通的点$(x-y)$的值是$p$的时候其余的连通块的<br>$\sum (x-y)^2$.</p><p>显然可以得到转移:$dp[u][p+q]=\max (dp[v][p]+dp[u][q])$</p><p>这里有个必须要注意的一点是:转移完了以后是要重新计算$dp[u][0]$的.</p><p>理由是:我们考虑的是不与根联通的连通块的平方和.做完当前$dp$后,$u$是与$fa[u]$断开的,那么下次考虑不连接这个子树的时候,即$u$与$fa[u]$不连通,那么$u$的贡献依旧是$dp[u][0]$.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-25 23:09:46</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-25 23:33:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5000</span>+<span class="number">10</span>;</span><br><span class="line">VI G[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[x].push_back(y),G[y].push_back(x);</span><br><span class="line">&#125;</span><br><span class="line">ll unused[maxn][maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line">ll unused2[maxn][maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line">ll *dp[maxn];<span class="comment">//dp array</span></span><br><span class="line">ll *dp2[maxn];<span class="comment">//scrolling array</span></span><br><span class="line">ll siz[maxn];<span class="comment">//size of subtree</span></span><br><span class="line"><span class="keyword">int</span> color[maxn];<span class="comment">//B or W array</span></span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">10000000000000l</span>l;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color[u]=c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=G[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        pre(v,u,-c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=-INF;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=-INF;</span><br><span class="line">    siz[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=-siz[u];k&lt;=siz[u];k++)</span><br><span class="line">    dp[u][k]=-INF;</span><br><span class="line">    dp[u][color[u]]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=G[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(v,u);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=-siz[u]-siz[v];k&lt;=siz[u]+siz[v];k++)</span><br><span class="line">        dp2[u][k]=-INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=-siz[u];k&lt;=siz[u];k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=-siz[v];j&lt;=siz[v];j++)</span><br><span class="line">        dp2[u][k+j]=max(dp[u][k]+dp[v][j],dp2[u][k+j]);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=-siz[u];k&lt;=siz[u];k++)</span><br><span class="line">        dp[u][k]=dp2[u][k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=-siz[u];k&lt;=siz[u];k++)</span><br><span class="line">    ans=max(ans,dp[u][k]+k*k);</span><br><span class="line">    dp[u][<span class="number">0</span>]=ans;<span class="comment">//updata dp[u][0]</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i]=unused[i]+maxn;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp2[i]=unused2[i]+maxn;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;read(x),read(y);</span><br><span class="line">        addedge(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    pre(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans-n;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;XJTUOJ-校赛模拟赛G&quot;&gt;&lt;a href=&quot;#XJTUOJ-校赛模拟赛G&quot; class=&quot;headerlink&quot; title=&quot;XJTUOJ  校赛模拟赛G&quot;&gt;&lt;/a&gt;XJTUOJ  校赛模拟赛G&lt;/h2&gt;&lt;p&gt;校赛模拟赛这个G其实场上有这个思路,但是这道题的$dp$转移还是很容易写错的.尤其是初值的问题,要考虑清楚$dp$的意义,以下的题解中的$dp$方式有点奇怪,可能并非最简单的$dp$方式,不过也足以通过这道题.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="树形dp" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2dp/"/>
    
  </entry>
  
  <entry>
    <title>AGC 038题解</title>
    <link href="http://yoursite.com/2020/04/17/AGC-038%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/17/AGC-038%E9%A2%98%E8%A7%A3/</id>
    <published>2020-04-17T07:14:43.000Z</published>
    <updated>2020-04-18T14:46:59.930Z</updated>
    
    <content type="html"><![CDATA[<p>A 构造</p><p>B 联通性</p><p>C 莫比乌斯反演</p><p>D 图论</p><p>E dp</p><p>F 网络流</p><a id="more"></a><h2 id="A-构造"><a href="#A-构造" class="headerlink" title="A 构造"></a>A 构造</h2><p>按照窗口一样的构造即可满足.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"></span><br><span class="line">ll n,m,w,h;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(n),read(m),read(w),read(h);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-h;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m-w;j++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m-w+<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-h+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m-w;j++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m-w+<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-联通性"><a href="#B-联通性" class="headerlink" title="B 联通性"></a>B 联通性</h2><p>考虑每个起点都作为无向图上一个点,等价就连起来,然后答案就是联通块个数.</p><p>考虑如何连边,首先如果两个点之后的$K$个点都已经是递增的,那么这两个点显然等价,我们把所有的这样的起点先按照环一样去连起来.(等价有传递性,我们不需要连成完全图,因此这里边数是$O(N)$的.)</p><p>然后考虑如果不是递增的情况,那么两个点等价当且仅当区间重合,而且等价关系有传递性.并且不存在两个点不相邻但等价并且两个点之间有点不和它们联通(这里的等价关系有归纳性).因此我们判断$i,i+1$这样的点是否等价即可.</p><p>综上,连边数量不超过$O(N)$个,$dfs$或使用并查集维护连通块个数即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200000</span>;</span><br><span class="line">ll N,K,ans;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; P;</span><br><span class="line"><span class="built_in">set</span>&lt;ll&gt; se;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; G[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[x].push_back(y);G[y].push_back(x);</span><br><span class="line">&#125;</span><br><span class="line">ll vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[v])</span><br><span class="line">        dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; eq;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    read(N);read(K);P.reserve(N+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;N;i++) read(P[i]);</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(P[i]&gt;P[i<span class="number">-1</span>]) cnt++;</span><br><span class="line">        <span class="keyword">else</span> cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(cnt==K) &#123;eq.push_back(i-K+<span class="number">1</span>);cnt=K<span class="number">-1</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;eq.size();i++)&#123;</span><br><span class="line">    addedge(eq[i],eq[i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=K<span class="number">-1</span>;i++)se.insert(P[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N-K;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> ok=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(P[i<span class="number">-1</span>]==*(se.begin())) ok=<span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;i&lt;&lt;" "&lt;&lt;ok&lt;&lt;endl;</span></span><br><span class="line">        se.erase(P[i<span class="number">-1</span>]);</span><br><span class="line">        se.insert(P[i+K<span class="number">-1</span>]);</span><br><span class="line">        <span class="comment">// for(auto p:se) cout&lt;&lt;p&lt;&lt;" ";</span></span><br><span class="line">        <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(P[i+K<span class="number">-1</span>]==*(--se.end())&amp;&amp;ok)</span><br><span class="line">        addedge(i,i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=N-K;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            dfs(i);</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-莫比乌斯反演"><a href="#C-莫比乌斯反演" class="headerlink" title="C 莫比乌斯反演"></a>C 莫比乌斯反演</h2><p>记$max$为$\max{A_i}$,推式子:<br>$$<br>\sum_{i=1}^{n}\sum_{j=1}^{n}lcm(A_i,A_j)=\sum_{d=1}^{max}1/d\sum_{i=1}^{n}\sum_{j=1}^{n}A_iA_j[(A_i,A_j)==d]<br>$$<br>这里来一发莫比乌斯反演:<br>$$<br>原式=\sum_{d=1}^{max}1/d\sum_{i=1}^{n}\sum_{j=1}^{n}A_iA_j[(A_i/d,A_j/d)==1]=\sum_{d=1}^{max}1/d\sum_{i=1}^{n}\sum_{j=1}^{n}A_iA_j\sum_{T|(A_i/d,A_j/d)}\mu(T)<br>$$<br>考虑枚举$\mu$的值:<br>$$<br>原式=\sum_{d=1}^{max}1/d\sum_{T=1}^{max/d}\mu(T)\sum_{i=1}^n\sum_{j=1}^nA_iA_j[Td|A_i  ,A_j]<br>$$<br>前面发现了经典的迪利克雷卷积的形式,我们可以考虑枚举$Td$,那么可以得到:<br>$$<br>原式=\sum_{x=1}^{max}\frac{1}{id}*\mu(x)\sum_{i=1}^{n}\sum_{j=1}^{n}A_iA_j[x|A_i,A_j]<br>$$<br>其中:乘积符号表示迪利克雷卷积.前面的卷积的值可以$O(nlogn)$的预处理,后面的式子再搞一下:<br>$$<br>\sum_{i=1}^{n}\sum_{j=1}^{n}A_iA_j[x|A_i,A_j]=(\sum_{i=1}^{n}A_i[x|A_i])^2<br>$$<br>这里也可以按照值域预处理出来,复杂度则是调和级数的$O(nlogn)$.</p><p>那么原题要求的东西就把对角线减掉再除以2即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-15 20:54:51</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-15 21:04:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">namespace</span> MOD&#123;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">M</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (x+<span class="number">20</span>*mod)%mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> <span class="number">1l</span>l*(M(x))*(M(y))%mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> M(x+y);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> (M(x-y));&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sq</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> <span class="number">1l</span>l*x%mod*x%mod%mod;&#125;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> MOD;</span><br><span class="line">ll mu[maxn+<span class="number">10</span>],p[maxn+<span class="number">10</span>],phi[maxn+<span class="number">10</span>],v[maxn+<span class="number">10</span>],func[maxn+<span class="number">10</span>],inv[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="function">ll  <span class="title">qpow</span><span class="params">(ll x, ll y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">ll tmp = qpow(x, y / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span> (y % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1l</span>l * tmp * tmp % mod;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1l</span>l * tmp * tmp % mod * x % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">    inv[i]=qpow(i,mod<span class="number">-2</span>);</span><br><span class="line">    v[<span class="number">1</span>]=mu[<span class="number">1</span>]=phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!v[i]) p[++cnt]=i,mu[i]=<span class="number">-1</span>,phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*p[j]&lt;=maxn;++j) &#123;</span><br><span class="line">            v[i*p[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%p[j]) mu[i*p[j]]=-mu[i],phi[i*p[j]]=phi[i]*phi[p[j]];</span><br><span class="line">            <span class="keyword">else</span> &#123; mu[i*p[j]]=<span class="number">0</span>,phi[i*p[j]]=phi[i]*p[j]; <span class="keyword">break</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*i&lt;=maxn;j++)</span><br><span class="line">    func[i*j]=add(func[i*j],mul(mu[i],inv[j]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">ll A[maxn+<span class="number">10</span>];</span><br><span class="line">ll mp[maxn+<span class="number">10</span>];</span><br><span class="line">ll ans1,ans2;</span><br><span class="line">ll f[maxn+<span class="number">10</span>];</span><br><span class="line">ll mn=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(N);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;read(A[i]);ans2=add(ans2,A[i]);++mp[A[i]];mn=max(mn,A[i]);&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mn;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=mn;j+=i)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i]=add(f[i],mul(mp[j],j));</span><br><span class="line">    &#125;</span><br><span class="line">    ans1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans1=add(ans1,mul(func[i],sq(f[i])));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(sub(ans1,ans2)*inv[<span class="number">2</span>])%mod;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-图论"><a href="#D-图论" class="headerlink" title="D 图论"></a>D 图论</h2><p>考虑只有$k=0$的连结情况,满足这些情况的连边方式一定是一个生成森林.</p><p>然后考虑把$k=1$的边给加进去.显然在一颗树不能连边;然后这样的话,森林的生成子树里,每棵树都至多有一个待连点.显然能加入的边数最多是每棵树出一个点(有待连点的树出待连点,没有待连点的树任意出一个点),把这些点连成完全图.统计是否 有多余的边.</p><p>这样的做法正确性基于这种构造即是能达到的最多边数.首先正确性显然:这样的构造显然满足条件;最优性:如果 多出任意一条边一定使得这条边被加在一棵树内,这是不允许的.</p><p>因此小心的分类讨论即可(考虑原图是树的情况;连通块仅有1,2个的情况),用并查集实现即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-17 00:12:29</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-18 00:46:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">200000</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==x) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        f[x]=find(f[x]);</span><br><span class="line">        <span class="keyword">return</span> f[x];</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">ll M;</span><br><span class="line">ll Q;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; p1;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; p2;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxn;i++)</span><br><span class="line">    f[i]=i;</span><br><span class="line">    read(N),read(M),read(Q);</span><br><span class="line">    ll pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,k;</span><br><span class="line">        read(x),read(y),read(k);</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>) p1.push_back(make_pair(x,y));<span class="keyword">else</span> p2.push_back(make_pair(x,y));</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> f1=find(x);</span><br><span class="line">        <span class="keyword">int</span> f2=find(y);</span><br><span class="line">        <span class="keyword">if</span>(f1!=f2) &#123;</span><br><span class="line">        pos++;</span><br><span class="line">        f[f1]=f2;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(M==N<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p2.size()!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">if</span>(find(i)==i) cnt++;</span><br><span class="line">    ll que=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> p:p2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(find(p.second)==find(p.first))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt&lt;=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(p2.size()!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ll ans=(<span class="number">1l</span>l*cnt*(cnt<span class="number">-1</span>))/<span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(((M<span class="number">-1l</span>l*pos)&gt;ans))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A 构造&lt;/p&gt;
&lt;p&gt;B 联通性&lt;/p&gt;
&lt;p&gt;C 莫比乌斯反演&lt;/p&gt;
&lt;p&gt;D 图论&lt;/p&gt;
&lt;p&gt;E dp&lt;/p&gt;
&lt;p&gt;F 网络流&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="AGC" scheme="http://yoursite.com/tags/AGC/"/>
    
  </entry>
  
  <entry>
    <title>周记(2020-4-13)</title>
    <link href="http://yoursite.com/2020/04/13/%E5%91%A8%E8%AE%B0-2020-4-13/"/>
    <id>http://yoursite.com/2020/04/13/%E5%91%A8%E8%AE%B0-2020-4-13/</id>
    <published>2020-04-13T12:52:54.000Z</published>
    <updated>2020-04-13T13:05:03.882Z</updated>
    
    <content type="html"><![CDATA[<p>一个人走在路上，形单影只。回首望去，大家都留在远方。回过头来继续前行，这便是所谓坚强。 </p><p>​                                                                                                                                    —Angel Beats</p><a id="more"></a><p>又是这个万恶的四月,最近重启了博客计划,就是想着要多多激励自己学习一些东西.</p><p>本来四月初,我雄心壮志,想着每天打一场<strong>AGC</strong>来提高思维能力,但是人类的本质却是鸽子.截至写这篇周记的时候,我才刚刚打了四场<strong>AGC</strong>,可见效率之差.诚然需要兼顾文化课,但是与自己的懒惰却脱不了干系.</p><p>这周依旧有很多事情要干呢,训练也不能松懈呀.每天都在雄心壮志和颓废自闭的转换中度过,感谢某同学偶尔还能陪我打打炉石(摸鱼)来放松放松.(我的同学好强啊,每次都能秒杀<strong>AGC</strong>的题目).</p><p>这周的计划依旧是打AGC,复习大学物理和摸鱼华为初赛.</p><p>只要用心生活,其实生活也没有想象中那么糟.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个人走在路上，形单影只。回首望去，大家都留在远方。回过头来继续前行，这便是所谓坚强。 &lt;/p&gt;
&lt;p&gt;​                                                                                                                                    —Angel Beats&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="周记" scheme="http://yoursite.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Bashing Geometry with Complex Numbers</title>
    <link href="http://yoursite.com/2020/04/13/Bashing-Geometry-with-Complex-Numbers/"/>
    <id>http://yoursite.com/2020/04/13/Bashing-Geometry-with-Complex-Numbers/</id>
    <published>2020-04-13T12:04:39.000Z</published>
    <updated>2020-04-13T12:51:22.210Z</updated>
    
    <content type="html"><![CDATA[<p>在做AGC039 D 题的时候,我用一种非常麻烦的解析几何的方法暴力证明了那题有关垂心和内心的结论,但是这种做法是过于繁琐的.</p><p>因此在翻阅codeforces 的discuss 后,我发现了一篇文章,介绍了一种复平面上的论证一些二维几何问题的方法,其中有关单位圆上的一些结论颇有启发性.</p><a id="more"></a><p>先将这篇文章丢在这里:</p><p> <a href="en-cmplx.pdf" title="附件下载">download</a></p><p>有时间好好学习一个(咕咕咕).</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做AGC039 D 题的时候,我用一种非常麻烦的解析几何的方法暴力证明了那题有关垂心和内心的结论,但是这种做法是过于繁琐的.&lt;/p&gt;
&lt;p&gt;因此在翻阅codeforces 的discuss 后,我发现了一篇文章,介绍了一种复平面上的论证一些二维几何问题的方法,其中有关单位圆上的一些结论颇有启发性.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="论文" scheme="http://yoursite.com/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>AGC039 题解</title>
    <link href="http://yoursite.com/2020/04/12/AGC039-%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/12/AGC039-%E9%A2%98%E8%A7%A3/</id>
    <published>2020-04-12T05:49:07.000Z</published>
    <updated>2020-04-13T12:51:55.373Z</updated>
    
    <content type="html"><![CDATA[<p>A 签到</p><p>B 二分图</p><p>C 找规律,计数</p><p>D 计算几何,三角形的五心(*)</p><a id="more"></a><h2 id="A-签到"><a href="#A-签到" class="headerlink" title="A 签到"></a>A 签到</h2><p>考虑全都是一个字母的情况,显然是$N/2$.不全都是一个字母,考虑单个字符串内的连续字符,每个连续字符都会贡献答案$|S|$,再考虑首尾相邻的情况,统计答案即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200</span>;</span><br><span class="line">ll K;</span><br><span class="line"><span class="built_in">string</span> s,p;</span><br><span class="line"><span class="function">ll <span class="title">q</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=s.length();</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; ans;</span><br><span class="line">    ans.clear();</span><br><span class="line">    <span class="keyword">int</span> now=s[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==now) res++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            now=s[i];</span><br><span class="line">            ans.push_back(res);</span><br><span class="line">            res=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans.push_back(res);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> p:ans)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=(p/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    read(K);</span><br><span class="line">    p=s+s;</span><br><span class="line">    <span class="keyword">bool</span> ok=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">    <span class="keyword">if</span>(s[i]!=s[<span class="number">0</span>]) ok=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(ok)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(K*s.length())/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll sum1=q(s);</span><br><span class="line">    ll sum2=q(p);</span><br><span class="line">    ll pos=sum1*<span class="number">2</span>-sum2;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum1*K-pos*(K<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-二分图"><a href="#B-二分图" class="headerlink" title="B 二分图."></a>B 二分图.</h2><p>显然二分图无解.</p><p>考虑不是二分图的情况,我们贪心的找出距离最远的两个点,把其中一个点放到$V_1$内,然后按照距离划分集合.</p><p>证明这个做法的正确性:因为不是二分图,因此这样做不可能存在两个相连的点到那个点的距离相等.同时考虑这3样做的最优性:因为如果有比当前做法更优的划分,那么最远距离就不能达到最远距离.</p><p>使用$floyd$算法,时间复杂度$O(n^3)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) x.begin(),x.end()</span></span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">205</span>;</span><br><span class="line"><span class="keyword">int</span> mp[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> pp[maxn][maxn];</span><br><span class="line">ll dis[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> color[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color[u]=c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    <span class="keyword">if</span>(mp[u][j]==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(color[j]==c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!color[j]&amp;&amp;!dfs(j,c==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,pp[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        c=pp[i][j];</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'1'</span>)</span><br><span class="line">        mp[i][j]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> mp[i][j]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!dfs(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==j) dis[i][j]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            dis[i][j]=(mp[i][j]==<span class="number">0</span>)?<span class="number">2000000</span>:<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    dis[i][j]=min(dis[i][k]+dis[k][j],dis[i][j]);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(dis[i][j]!=<span class="number">2000000</span>)&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        ans=max(ans,dis[i][j]);</span><br><span class="line">    &#125;&#125;&#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans+<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-计数"><a href="#C-计数" class="headerlink" title="C  计数"></a>C  计数</h2><p>考虑这种运算的本质:其实就是把后几位取反扔到前面去.那么显然$2N$次操作以后一定可以复原.</p><p>那么考虑循环的性质,最小的复原操作次数$k$一定是$2N$的因子.</p><p>我们可以枚举这个$k$,再用容斥原理统计答案.考虑现在$k$次操作可以复原,模拟这种运算的本质,我们发现:一定不能是整段$k$的循环(因为一个二进制不可能等于他的取反).</p><p>那么其实只有可能是$k$在中间断开循环.循环节其实是由互相取反的两段长度为$\frac{k}{2}$的二进制组成的.</p><p>然后我们只需要考虑这个$k/2$的字符串的计数即可,显然字典序严格小于的一定可以,如果相等,只需要构造出来比较即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-09 23:57:16</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-10 01:23:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">400000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> num[maxn];</span><br><span class="line">ll ans[maxn];</span><br><span class="line">ll pow_2[maxn];</span><br><span class="line"><span class="keyword">char</span> tw[maxn];</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mystrcmp</span><span class="params">(<span class="keyword">char</span>* c1,<span class="keyword">char</span>* c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c1[i]&gt;c2[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(c1[i]&lt;c2[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> s;</span><br><span class="line">        s=getchar();</span><br><span class="line">        num[i]=s;</span><br><span class="line">    &#125;</span><br><span class="line">    pow_2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)</span><br><span class="line">    pow_2[i]=pow_2[i<span class="number">-1</span>]*<span class="number">2</span>%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=N;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(N%k==<span class="number">0</span>&amp;&amp;N/k%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            ll res=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            res=(res+(((num[i]-<span class="string">'0'</span>)==<span class="number">1</span>)?pow_2[k-i]:<span class="number">0</span>))%mod;</span><br><span class="line">            &#125;</span><br><span class="line">            res++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i+=<span class="number">2</span>*k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> ca=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=i+k<span class="number">-1</span>;j++)</span><br><span class="line">                tw[j]=num[++ca];</span><br><span class="line">                ca=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=i+k;j&lt;=i+<span class="number">2</span>*k<span class="number">-1</span>;j++)</span><br><span class="line">                tw[j]=num[++ca]==<span class="string">'0'</span>?<span class="string">'1'</span>:<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mystrcmp(tw,num)&gt;<span class="number">0</span>) &#123;res=(res<span class="number">-1</span>+mod)%mod;&#125;</span><br><span class="line">            ans[k]=res%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=N;j+=i)</span><br><span class="line">        ans[j]=(ans[j]-ans[i]+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    <span class="keyword">if</span>(N%i==<span class="number">0</span>&amp;&amp;(N/i)%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">    sum=(sum+<span class="number">2</span>*i*ans[i])%mod;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-计算几何-三角形的五心"><a href="#D-计算几何-三角形的五心" class="headerlink" title="D 计算几何,三角形的五心"></a>D 计算几何,三角形的五心</h2><p>首先考单位圆上取三个点$A,B,C$如何计算内心$I$:</p><p>设在复平面上的单位圆$O$上有三个点$A,B,C$,分别记为$x^2,y^2,z^2(x,y,z\in \textbf{C},|x|=|y|=|z|=1)$;延长$AI,BI,CI$交圆$O$为$D,E,F$.那么$B,C$关于$OE$对称,设$D$为$d,d\in\textbf{C}$,复数计算法则可得:<br>$$<br>\frac{y^2}{d}=\overline{(\frac{z^2}{d})}=\frac{\overline{z^2}}{\overline{d}}<br>$$<br>$$<br>d=-yz(舍去正根)<br>$$</p><p>同理可得:$e=-xz,f=-xy$,因此$\Delta DEF$的垂心是$(d+e+f)$,同理可得$\Delta ABC$的内心的坐标是$(-yz-xz-xy)$,因此它们重合.</p><p>接下来只需要考虑每个线段对答案的贡献即可,这样就只需要枚举不同线段的个数就可以了,时间复杂度在$n^2$级别,可以通过.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-12 22:42:18</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-12 23:54:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line">ll N;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> L;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5000</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> T[maxn];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi 3.14159265358979323846</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N&gt;&gt;L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T[i];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">double</span> rx=<span class="number">0.0</span>,ry=<span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        rx+=(N<span class="number">-2</span>*j+<span class="number">2</span>*i)*<span class="built_in">cos</span>((<span class="keyword">long</span> <span class="keyword">double</span>)<span class="number">2</span>*pi*(T[j]+T[i])/(<span class="keyword">long</span> <span class="keyword">double</span> )(<span class="number">2.0</span>*L));</span><br><span class="line">        ry+=(N<span class="number">-2</span>*j+<span class="number">2</span>*i)*<span class="built_in">sin</span>((<span class="keyword">long</span> <span class="keyword">double</span>)<span class="number">2</span>*pi*(T[j]+T[i])/(<span class="keyword">long</span> <span class="keyword">double</span>)(<span class="number">2.0</span>*L));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">13</span>)&lt;&lt;(<span class="keyword">long</span> <span class="keyword">double</span>)(<span class="number">6</span>*rx)/(<span class="keyword">long</span> <span class="keyword">double</span>)((N)*(N<span class="number">-1</span>)*(N<span class="number">-2</span>))&lt;&lt;<span class="string">" "</span>&lt;&lt;(<span class="keyword">long</span> <span class="keyword">double</span>)(<span class="number">6</span>*ry)/(<span class="keyword">long</span> <span class="keyword">double</span>)((N)*(N<span class="number">-1</span>)*(N<span class="number">-2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A 签到&lt;/p&gt;
&lt;p&gt;B 二分图&lt;/p&gt;
&lt;p&gt;C 找规律,计数&lt;/p&gt;
&lt;p&gt;D 计算几何,三角形的五心(*)&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="AGC" scheme="http://yoursite.com/tags/AGC/"/>
    
  </entry>
  
  <entry>
    <title>AGC 040 部分题解(待更)</title>
    <link href="http://yoursite.com/2020/04/05/agc-040/"/>
    <id>http://yoursite.com/2020/04/05/agc-040/</id>
    <published>2020-04-05T14:45:29.000Z</published>
    <updated>2020-04-13T11:22:21.376Z</updated>
    
    <content type="html"><![CDATA[<p>A 构造/贪心</p><p>B 贪心</p><p>C 利用等价类计数</p><p>D 贪心</p><a id="more"></a><h2 id="A-构造"><a href="#A-构造" class="headerlink" title="A 构造"></a>A 构造</h2><p>考虑”&lt;&gt;”的位置,直接构造即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> S[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,S);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(S);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[i]==<span class="string">'&lt;'</span>)</span><br><span class="line">        a[i+<span class="number">1</span>]=a[i]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S[i]==<span class="string">'&gt;'</span>)</span><br><span class="line">        a[i]=max(a[i],a[i+<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=len;i++)</span><br><span class="line">    sum+=a[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-贪心"><a href="#B-贪心" class="headerlink" title="B 贪心"></a>B 贪心</h2><p>这类分类找最值的题,一般是转化为min/max的单调性质去做的.</p><p>首先考虑最靠右的左端点,记录这个端点为X,同理最靠左的端点记录为Y.</p><p>分类讨论:</p><p>(1).X,Y 都分在同一个集合内,这个集合的权值就被确定了,那么按照贪心性,我们把除了最长的线段之外的线段都加入到这个集合内,那么答案显然.</p><p>(2)X,Y分属两个集合.记X在的集合为$P$,Y在的集合为$Q$,考虑到如下引理:<br>$$<br>if ~A属于 B ,\min(B)\leq \min(A)<br>$$<br>如果我们将一个线段扔进$P$,那么这个时候将剩下不会更改$P$答案的点扔进这个集合显然是更优的.</p><p>按照这样的思想,这个问题就变成了取前缀$\min$和后缀$\min$之和的一个问题,排序后逐个比较即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; pp;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; T;</span><br><span class="line">ll mxL,minR,mxR,minL;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line">    mxL=mxR=<span class="number">-1</span>;</span><br><span class="line">    minL=minR=<span class="number">10000000000l</span>l;</span><br><span class="line">    <span class="keyword">int</span> P,Q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x,y;</span><br><span class="line">        read(x),read(y);</span><br><span class="line">        y++;</span><br><span class="line">        pp.push_back(make_pair(x,y));</span><br><span class="line">        <span class="keyword">if</span>(x&gt;mxL)</span><br><span class="line">        &#123;</span><br><span class="line">            mxL=x;</span><br><span class="line">            P=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(minR&gt;y)</span><br><span class="line">        &#123;</span><br><span class="line">            minR=y;</span><br><span class="line">            Q=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans1=<span class="number">0</span>,ans2=<span class="number">0</span>;</span><br><span class="line">    minL=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            minL=max(minL,pp[i<span class="number">-1</span>].second-pp[i<span class="number">-1</span>].first);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ans1=max((minL),<span class="number">0l</span>l)+max((minR-mxL),<span class="number">0l</span>l);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ca=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> p:pp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ca!=P&amp;&amp;ca!=Q)</span><br><span class="line">        T.push_back(make_pair(max(p.second-mxL,<span class="number">0l</span>l),max(minR-p.first,<span class="number">0l</span>l)));</span><br><span class="line">        ca++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(T.begin(),T.end());</span><br><span class="line">    ll P1=pp[P<span class="number">-1</span>].second-pp[P<span class="number">-1</span>].first;</span><br><span class="line">    ll Q1=pp[Q<span class="number">-1</span>].second-pp[Q<span class="number">-1</span>].first;</span><br><span class="line">    ll x1=<span class="number">0</span>,x2=Q1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;T.size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        x1=min(T[i].first,P1);</span><br><span class="line">        ans2=max(ans2,x1+x2);</span><br><span class="line">        x2=min(T[i].second,x2);</span><br><span class="line">    &#125;</span><br><span class="line">    ans2=max(ans2,P1+x2);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;max(ans1,ans2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-利用等价类计数"><a href="#C-利用等价类计数" class="headerlink" title="C 利用等价类计数"></a>C 利用等价类计数</h2><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h4><p>这个题核心在于构造等价类,利用更容易计数的等价类来计算答案.</p><p>考虑删除只能删除相邻字符,那么其实字符的奇偶相对性不会改变,那么我们可以构造一个等价类:</p><p>将奇数位置AB互换,统计不能删除”AA,BB”的字符串个数.</p><p>这个计数非常简单,考虑”A,B”内部不能自己相消,那么其实这个充要条件是”A的字符数量和B的字符数量都不能超过$\frac{n}{2}$”.</p><p>这个证明可以通过构造证明得出.</p><p>那么接下来等价类计数非常简单,组合数推一推式子即可.(式子见代码)</p><p>(注意不能写$O(nlogn)$的naive计算组合数的方式,TLE好几发~)</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h4><p>方法二是用一种比较组合数学的方式,但事实上是和第一种方法等价的.</p><p>考虑只有”AB,BA”的字符串,设以下方程:$\sum_{i=1}^{N/2}x_i=S,x_i\in {-1,1}$,字符串可被消空当且仅当$S=0$.</p><p>同时,我们注意到”AB,BA”是互斥的,换句话说,也就是如果不能被消空,那么要不然是”AB”没有被消空,要不然是”BA”没有被消空.那么我们得到:<br>$$<br>Ans=|I|-|AB|-|BA|=3^n-2*(“AB”没有被消空的序列数量)<br>$$<br>这个时候考虑转换成不定方程,$\sum_{i=1}^{N/2}x_i=S,x_i\in {-1,1,0}$,$x$的取值可以由是否能被消除推出.</p><p>得出生成函数$F(x)=(4x^{-1}+4+x)^{N/2}$.那么方案数其实就是$F(x)$次数大于0项的系数和.</p><p>泰勒展开后得到与之前一样的式子.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @Date: 2020-04-05 21:40:13</span></span><br><span class="line"><span class="comment"> * @LastEditors: RBQRBQ</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2020-04-05 22:23:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll maxn =<span class="number">10000000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">qpow</span><span class="params">(ll a, ll n, ll p)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1l</span>l) </span><br><span class="line">ans = ans * a % p;</span><br><span class="line">        a = a * a % p;</span><br><span class="line">        n &gt;&gt;= <span class="number">1l</span>l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">ll A[maxn+<span class="number">10</span>];</span><br><span class="line">ll B[maxn+<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exPower</span><span class="params">( <span class="keyword">int</span> b, <span class="keyword">int</span> p, <span class="keyword">int</span> &amp; a, <span class="keyword">int</span> &amp; k )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( p == <span class="number">0</span> ) &#123;</span><br><span class="line">        a = <span class="number">1</span>; k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    exPower( p, b % p, k, a );</span><br><span class="line">    k -= b / p * a;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">( <span class="keyword">int</span> b, <span class="keyword">int</span> p )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, k;</span><br><span class="line">    exPower( b, p, a, k );</span><br><span class="line">    <span class="keyword">if</span>( a &lt; <span class="number">0</span> ) a += p;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">( <span class="keyword">int</span> n )</span> </span>&#123;</span><br><span class="line">    A[ <span class="number">0</span> ] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i ) A[ i ] = A[ i - <span class="number">1</span> ] * i % mod;</span><br><span class="line">    B[ n ] = inv( A[ n ], mod );</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i ) B[ i ] = B[ i + <span class="number">1</span> ] * ( i + <span class="number">1</span> ) % mod;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">C</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> (A[a] * B[b] %mod)*B[a-b]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x*y)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">add</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x+y&gt;=mod)?x+y-mod:x+y;</span><br><span class="line">&#125;</span><br><span class="line">ll pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line">    ll ans=qpow(<span class="number">3</span>,N,mod);</span><br><span class="line">    init(maxn);</span><br><span class="line">    ll pos=<span class="number">0</span>;</span><br><span class="line">    pre[<span class="number">0</span>]=<span class="number">1l</span>l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N/<span class="number">2</span><span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pre[i]=mul(pre[i<span class="number">-1</span>],<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//pos=(pos%mod+(qpow(2,(N/2-i),mod)*C(N,N/2+i))%mod)%mod;</span></span><br><span class="line">        pos=add(pos,mul(pre[N/<span class="number">2</span>-i],C(N,N/<span class="number">2</span>+i)));</span><br><span class="line">    &#125;</span><br><span class="line">    pos=pos*<span class="number">2</span>%mod;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(ans-pos+mod)%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-贪心"><a href="#D-贪心" class="headerlink" title="D 贪心"></a>D 贪心</h2><p>(题解咕咕咕了)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; frac;</span><br><span class="line"> </span><br><span class="line">ll N,S=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;frac&gt; T;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mp</span><span class="params">(frac A,frac B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (A.first*B.second&lt;A.second*B.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span> </span>&#123; <span class="keyword">return</span> (!y)?x:gcd(y,x%y); &#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    read(N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        ll x,y;</span><br><span class="line">        read(x),read(y);</span><br><span class="line">        S+=x;</span><br><span class="line">        T.push_back(make_pair(<span class="built_in">std</span>::max(x,y),y));</span><br><span class="line">    &#125;</span><br><span class="line">    sort(T.begin(),T.end(),greater&lt;frac&gt;());</span><br><span class="line">    ll pos=<span class="number">0</span>;</span><br><span class="line">    ll point=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> ca=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> it=T.begin();it!=T.end();it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((pos+it-&gt;first) &gt;S) <span class="keyword">break</span>;</span><br><span class="line">        pos+=it-&gt;first;</span><br><span class="line">        point=it-T.begin();</span><br><span class="line">        ca++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ca==N)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"0 1"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="function">frac <span class="title">ans</span><span class="params">(<span class="number">0</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;T.size();++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;point)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pos+T[i].second&gt;=S) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function">frac <span class="title">res</span><span class="params">(pos+T[i].second-S,T[i].second)</span></span>;</span><br><span class="line">                ans=(mp(ans,res))?res:ans;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pos-T[i].first+T[point+<span class="number">1</span>].first+T[i].second&gt;=S)</span><br><span class="line">            &#123;</span><br><span class="line">                frac res(pos-T[i].first+T[point+<span class="number">1</span>].first+T[i].second-S,T[i].second);</span><br><span class="line">                ans=(mp(ans,res))?res:ans;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    ans.first+=ans.second*(N-ca<span class="number">-1</span>);ans.second*=N;</span><br><span class="line">    ll _f=gcd(ans.first,ans.second);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans.first/_f&lt;&lt;<span class="string">" "</span>&lt;&lt;ans.second/_f&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A 构造/贪心&lt;/p&gt;
&lt;p&gt;B 贪心&lt;/p&gt;
&lt;p&gt;C 利用等价类计数&lt;/p&gt;
&lt;p&gt;D 贪心&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="AGC" scheme="http://yoursite.com/tags/AGC/"/>
    
  </entry>
  
  <entry>
    <title>AGC 041 部分题解</title>
    <link href="http://yoursite.com/2020/04/04/agc-041/"/>
    <id>http://yoursite.com/2020/04/04/agc-041/</id>
    <published>2020-04-04T02:02:37.000Z</published>
    <updated>2020-04-07T06:20:22.564Z</updated>
    
    <content type="html"><![CDATA[<p>A 签到</p><p>B 二分+抽屉原理</p><p>C 简单构造</p><p>D dp/不定方程(重点在于约束模型的转化)</p><a id="more"></a><h2 id="A-签到"><a href="#A-签到" class="headerlink" title="A 签到"></a>A 签到</h2><p>考虑尽量让两个选手向中间靠拢,如果无法靠拢,就把一个选手在边界调整一轮奇偶性即可,模拟这个过程输出答案.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll N,A,B;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(N),read(A),read(B);</span><br><span class="line">    <span class="keyword">if</span>(A&lt;B) swap(A,B);</span><br><span class="line">    ll ans1,ans2,ans3;</span><br><span class="line">    ans1=ans2=ans3=<span class="number">2000000000000000000l</span>l;</span><br><span class="line">    <span class="keyword">if</span>((A-B)%<span class="number">2</span>==<span class="number">0</span>) ans1=(A-B)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    ans2=min(((A+B)<span class="number">-1</span>)/<span class="number">2</span>,max(A<span class="number">-1</span>,B<span class="number">-1</span>));</span><br><span class="line">    ans3=min(((A-B)<span class="number">-1</span>)/<span class="number">2</span>+N-A+<span class="number">1</span>,max(N-A,N-B));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;min(min(ans1,ans2),ans3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-二分-抽屉原理"><a href="#B-二分-抽屉原理" class="headerlink" title="B 二分+抽屉原理"></a>B 二分+抽屉原理</h2><p>首先贪心性显然:如果一个低分值的题目可能被选上,那么比他分值高的题目也一定能被选上.</p><p>考虑一个二分,二分排序后第$x$个选手能否被选上.验证这个二分的时候,再考虑贪心性:只有前$p-1$个和第$x$个能被选上.</p><p>因此,就可以这样判断:</p><ul><li><p>$x\leq p$ ,$x$一定能被选上;</p></li><li><p>$point[x]+m&lt;point[p]$时,即使全部评委给$x$投票 也不够,因此$x$一定无法被选上;</p></li><li><p>最后我们需要考虑评委数量的问题:有$m$个评委,每个评委能投入$v$张票,因此贪心地想,$1 - (p-1)$和$i(i&gt;x)$的题目即使全部投票 也不会对$x$的正确性产生影响,真正对$x$产生影响的是$i[p\leq i&lt;x]$的题目,如果它们被溢出的票给选上了,就可能对$x$的正确性造成影响.定量地看:每个$i[p\leq i &lt;x]$最多不影响$x$的票数是$point[x]+m-point[i]$.考虑抽屉原理 ,如果一共的票数$mv&gt;$总票数(全部投给对$x$无影响的以及将无所谓的票数投给那些有影响的),那么一定有票数”溢出”了,这些票一定被分在了$i[p\leq i &lt;x]$那先题目了,这样$x$就一定无法选上了.</p></li></ul><p>时间复杂度$O(nlogn)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line">ll a[<span class="number">100000</span>+<span class="number">10</span>];</span><br><span class="line">ll n,m,v,p;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a&gt;b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=p) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[x]+m&lt;a[p]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(p<span class="number">-1</span>+n-x&gt;=v) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    ll sum=(p)*m+(n-x)*m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=p;i&lt;=x<span class="number">-1</span>;i++)</span><br><span class="line">    sum+=a[x]+m-a[i];</span><br><span class="line">    <span class="keyword">if</span>(sum&lt;m*v) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(n),read(m),read(v),read(p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    ll l=<span class="number">0</span>,r=n;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        ll mid=(l+r+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(judge(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-简单构造"><a href="#C-简单构造" class="headerlink" title="C 简单构造"></a>C 简单构造</h2><p>这个构造题比较简单,显然我们只需要构造出$n=4-7$且价值为3的情况,然后在对角线摆放即可.</p><p>($n=2$无解),小情况可以手造也可以暴力,当然这题手造也很好造.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">aaca</span></span><br><span class="line"><span class="comment">bbca</span></span><br><span class="line"><span class="comment">acbb</span></span><br><span class="line"><span class="comment">acaa</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">b.cca</span></span><br><span class="line"><span class="comment">bc..b</span></span><br><span class="line"><span class="comment">ac..b</span></span><br><span class="line"><span class="comment">abbaa</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">aa.bba</span></span><br><span class="line"><span class="comment">b.cc.a</span></span><br><span class="line"><span class="comment">bc.aa.</span></span><br><span class="line"><span class="comment">.ca..b</span></span><br><span class="line"><span class="comment">a.a..b</span></span><br><span class="line"><span class="comment">abb.aa</span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment">aa..bba</span></span><br><span class="line"><span class="comment">b.cc..a</span></span><br><span class="line"><span class="comment">bc.aa..</span></span><br><span class="line"><span class="comment">.ca.cc.</span></span><br><span class="line"><span class="comment">..ac..b</span></span><br><span class="line"><span class="comment">a..c..b</span></span><br><span class="line"><span class="comment">abb..aa</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">        x=<span class="number">0</span>;ll f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-f;ch=getchar();&#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">        x=x*f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> IO;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">2000</span>][<span class="number">2000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">3</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"a.."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"a.."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">".aa"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">int</span> m,mod;</span><br><span class="line">    m=n/<span class="number">4</span><span class="number">-1</span>;</span><br><span class="line">    mod=n%<span class="number">4</span>+<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> x1=<span class="number">0</span>,x2=<span class="number">0</span>,x3=<span class="number">0</span>,x4=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n-mod;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(j%<span class="number">4</span>==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x1;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"...."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"aaca"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>*x1+<span class="number">4</span>+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        x1++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(j%<span class="number">4</span>==<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x2;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"...."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"bbca"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>*x2+<span class="number">4</span>+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        x2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j%<span class="number">4</span>==<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x3;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"...."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"acbb"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>*x3+<span class="number">4</span>+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        x3++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j%<span class="number">4</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x4;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"...."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"acaa"</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>*x4+<span class="number">4</span>+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        x4++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(mod==<span class="number">4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-4</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"aaca"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-4</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"bbca"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-4</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"acbb"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-4</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"acaa"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(mod==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">b.cca</span></span><br><span class="line"><span class="comment">bc..b</span></span><br><span class="line"><span class="comment">ac..b</span></span><br><span class="line"><span class="comment">abbaa</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-5</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"aabba"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-5</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"bcc.a"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-5</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"b..cb"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-5</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"a..cb"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-5</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"abbaa"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(mod==<span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">aa.bba</span></span><br><span class="line"><span class="comment">b.cc.a</span></span><br><span class="line"><span class="comment">bc.aa.</span></span><br><span class="line"><span class="comment">.ca..b</span></span><br><span class="line"><span class="comment">a.a..b</span></span><br><span class="line"><span class="comment">abb.aa</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"aa.bba"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"b.cc.a"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"bc.aa."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">".ca..b"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"a.a..b"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-6</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"abb.aa"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(mod==<span class="number">7</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">aa..bba</span></span><br><span class="line"><span class="comment">b.cc..a</span></span><br><span class="line"><span class="comment">bc.aa..</span></span><br><span class="line"><span class="comment">.ca.cc.</span></span><br><span class="line"><span class="comment">..ac..b</span></span><br><span class="line"><span class="comment">a..c..b</span></span><br><span class="line"><span class="comment">abb..aa</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"aa..bba"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"b.cc..a"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"bc.aa.."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">".ca.cc."</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"..ac..b"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"a..c..b"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-7</span>;i++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"."</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"abb..aa"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-dp-不定方程"><a href="#D-dp-不定方程" class="headerlink" title="D dp/不定方程"></a>D dp/不定方程</h2><p>这个题难点在于模型的转化,转化以后代码仅仅30行不到.</p><p>首先考虑贪心性,我们要满足的情况是<br>$$<br>\forall k,~~\sum_{i=1}^{k+1}A_i&gt;\sum_{i=n-k+1}^{n}A_i<br>$$<br>观察这个式子我们发现由于$A_i$的单调性,所以只用考虑前一半和后一半的总和的约束即可,即$k=n/2$.</p><p>由于$A_i$具有单调性,我们不太好直接统计$A_i$序列的方案数,因此我们可以设$A_i=1+\sum_{j=1}^ix_j$:</p><p>这样我们就把$A_i$的计数转化成了$x_i$的不带单调条件的计数.</p><p>在$k=n/2$处改写为$x_i$的约束条件:</p><ul><li>$\sum_{i=1}^n x_i &lt; n$</li><li>$1+x_1&gt; \sum_{i=2}^{n}(i\leq (n&gt;&gt;1)+1?i-2:n-i+1)x_i$</li></ul><p>然后我们发现我们我们可以把计数改为带约束的$x_1$的计数和不带约束的$x_2 -x_n $的计数.$x_1$的情况只和$\sum_{i=2}^{n}(i\leq (n&gt;&gt;1)?i-1:n-i+2)x_i$有关,因此我们可以设计一个不定方程模型:$dp[i][j]$表示考虑到第$i$个未知数和为$j$的情况总数,这个$dp$可以很简单地类似完全背包地转移出来,统计总的情况数,题目就被解决了.</p><p>(可能可以生成函数推式子?存疑)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">5005</span>;</span><br><span class="line">ll dp[maxn][maxn],n,mod;</span><br><span class="line">ll c[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[i]=(i&lt;=(n&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>?i<span class="number">-1</span>:n-i+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// dp[i][j]=dp[i][j-c[i]]+dp[i-1][j]</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;=c[i])dp[i][j]=(dp[i][j-c[i]]+dp[i<span class="number">-1</span>][j]+mod)%mod;</span><br><span class="line">        <span class="keyword">else</span> dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    ans=(ans+(n-i)*dp[n][i]%mod)%mod;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A 签到&lt;/p&gt;
&lt;p&gt;B 二分+抽屉原理&lt;/p&gt;
&lt;p&gt;C 简单构造&lt;/p&gt;
&lt;p&gt;D dp/不定方程(重点在于约束模型的转化)&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="AGC" scheme="http://yoursite.com/tags/AGC/"/>
    
  </entry>
  
</feed>
